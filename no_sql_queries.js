db.restaurants.find({})
db.restaurants.find({},{"restaurant_id":1, "name":1, "borough":1, "cuisine":1})
db.restaurants.find({},{"_id": 0, "restaurant_id": 1, "name": 1, "borough": 1, "cuisine":1})
db.restaurants.find({}, {"_id":0, "name":1,"borough":1,"zip code":1})
db.restaurants.find({"borough": "Bronx"})
db.restaurants.find({"borough": "Bronx"}).limit(5)
db.restaurants.find({"borough": "Bronx"}).skip(5).limit(5)
db.restaurants.find({"grades.score": {$gt: 90}})
db.restaurants.find({"grades.score": {$gt: 80, $lt: 100}})
db.restaurants.find({"address.coord.0": {$lt: -95.754168}})
db.restaurants.find({$and: [{"cuisine":{$ne: "American"}}, {"grades.score": {$gt:70}},{"address.coord.0":{$lt: -65.754168}}]},{_id:0,name:1,cuisine:1,grades:1,"address.coord":1})
db.restaurants.find({"cuisine":{$ne: "American"}},{"grades.score":{$gt:70}},{"address.coord.0":{$lt:-65.754168}},{_id:0,name:1,cuisine:1,grades:1,"address.coord":1})
db.restaurants.find({$and: [{"cuisine":{$ne: "American"}}, {"grades.grade": "A"}, {"borough":{$ne: "Brooklyn"}}]},{_id:0,name:1,cuisine:1,grades:1}).sort({cuisine: -1})
db.restaurants.find({name: /^Wil/i },{_id:0,restaurant_id:1,name:1,borough:1,cuisine:1})
db.restaurants.find({name: /ces$/i},{_id:0,restaurant_id:1,name:1,borough:1,cuisine:1})
db.restaurants.find({name: /Reg/i},{_id:0,restaurant_id:1,name:1,borough:1,cuisine:1})
db.restaurants.find({$and: [{borough:"Bronx"},{cuisine: { $in: ["American","Chinese"]}}]},{_id:0,name:1,borough:1,cuisine:1})
db.restaurants.find({borough: {$in:["Staten Island", "Queens", "Bronx", "Brooklyn"]}},{_id:0,restaurant_id:1,name:1,borough:1,cuisine:1})
db.restaurants.find({borough: {$nin:["Staten Island","Queens","Bronx","Brooklyn"]}},{_id:0,restaurant_id:1,name:1,borough:1,cuisine:1})
db.restaurants.find({"grades.score": {$ln:10}},{_id:0,restaurant_id:1,name:1,borough:1,cuisine:1})
db.restaurants.find({$and: [{cuisine: "Seafood"},{cuisine: {$nin: "American", "Chinese"}},{name: {$not: /^Wil/}}]},{_id:0,restaurant_id:1,name:1,borough:1,cuisine:1})
db.restaurants.find({grades:{$elemMatch:{grade:"A",score:11,date: ISODate("2014-08-11T00:00:00Z")}}},{_id:0,restaurant_id:1,name:1,grades:1})
db.restaurants.find({"grades.1":{$elemMatch: {grade: "A", score: 9, date: ISODate("2014-08-11T00:00:00Z")}}},{_id:0,restaurant_id:1,name:1,grades:1})
db.restaurants.find({"address.coord.1":{$gt:42, $lt:52}},{_id:0,restaurant_id:1,name:1,address:1})
db.restaurants.find({},{_id:0,name:1,cuisine:1,borough:1}).sort({name:1})
db.restaurants.find({},{_id:0,name:1,cuisine:1,borough:1}).sort({name:-1})
db.restaurants.find({},{_id:0,name:1,borough:1,cuisine:1}).sort({name:1},{borough:-1})
db.restaurants.find({"address.street":{$exists:true,$ne: ""}},{_id:0,name:1,"address.street":1,"address.building":1,borough:1})
// Escriu una consulta que seleccioni tots els documents en la col·lecció de restaurants on els valors del camp coord és de tipus Double.
// Escriu una consulta que seleccioni el restaurant_id, name i grade per a aquells restaurants que retornen 0 com a residu després de dividir algun dels seus score per 7.
db.restaurants.find({name: /mon/i},{_id:0,name:1,borough:1,"address.coord":1,cuisine:1})
db.restaurants.find({name: /^Mad/i},{_id:0,name:1,borough:1,"address.coord":1,cuisine:1})